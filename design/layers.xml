<define name="NUMBER_OF_LAYERS" value="8"/>
<define name="SCREEN_SIZE" value="512"/>



<!-- Volumes -->
<group name="volumes">
	<uniform type="int" name="numberOfLayers" value="NUMBER_OF_LAYERS">
		<translate x="-0.25">
			<texture type="3D" file="input/skull.vlb" name="skull">
			<uniform type="sampler3D" name="volume" link="skull">
				<box size="1.0"/>
			</uniform>
			</texture>
		</translate>
		<translate x="+0.25">
			<texture type="3D" file="input/bear.vlb" name="bear">
			<uniform type="sampler3D" name="volume" link="bear">
				<box size="1.0"/>
			</uniform>
			</texture>
		</translate>
	</uniform>
</group>



<!-- Use layers and repeat for each cluster -->
<target size="SCREEN_SIZE" tile="NUMBER_OF_LAYERS">
	<for each="cluster" of="box" name="cluster">
		
		<!-- Find layer depths-->
		<operation type="distribute"
		           on="points"
		           of="cluster"
		           limit="z"
		           using="NUMBER_OF_LAYERS"
		           name="depths"/>
		
		<!-- Clear all the layers -->
		<program>
			<shader type="fragment" file="layers-clear.frag"/>
			<quad size="fullscreen"/>
		</program>
		
		<!-- Render the volumes -->
		<program>
			<shader type="fragment" file="layers-intersections.frag"/>
			<uniform type="float" name="layerDepths" link="depths"/>
			<uniform type="int" name="numberOfLayers" value="NUMBER_OF_LAYERS">
				<instance of="volumes"/>
			</uniform>
			</uniform>
		</program>
		
		<!-- Flatten all the layers to the framebuffer -->
		<program>
			<shader type="fragment" file="layers-flatten.frag"/>
			<uniform type="int" name="numberOfLayers" value="NUMBER_OF_LAYERS">
				<quad size="fullscreen"/>
			</uniform>
		</program>
	</for>
</target>
